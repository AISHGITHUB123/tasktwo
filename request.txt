I've created a linux virtual machine and logged into it and sent this API request :

curl -s -H Metadata:true --noproxy "*" "http://169.254.169.254/metadata/instance?api-version=2021-02-01" | python -m json.tool

If the jq utility is missing, use | python -m json.tool instead.

Response : The response is a JSON string.

The Azure Instance Metadata Service (IMDS) provides information about currently running virtual machine instances. You can use it to manage and configure your virtual machines. This information includes the SKU, storage, network configurations, and upcoming maintenance events. 

VM has it's own name but it knows nothing about the azure resource manager

We use here the invoke web request to talk to 169.254.169.254 and to metadata endpoint and pass the api version latest

Lets save this output to a variable :
$respraw=Invoke-WebRequest -Headers @{"Metadata"="true"} -Method GET -Proxy $Null -Uri "http://169.254.169.254/metadata/instance?api-version=2021-01-01"
we can see the response here with $respraw : It will return everything - comprises of everything compute,n/w ,license,os disk data 
userdata,tags info,
$respraw
$respraw.Content
$respraw.Content | ConvertFrom-Json | ConvertTo-Json -Depth 6

As we had kind kind of format so rather using invole web request we can use invoke rest method this will prekind the format into a native
into a native powershell object
$resp - return an obj
$resp.compute - returns the compute part..it makes our task easy to interact

-----
#A better way that automatically creates us a nice PowerShell object with the response
$resp=Invoke-RestMethod -Headers @{"Metadata"="true"} -Method GET -Proxy $Null -Uri "http://169.254.169.254/metadata/instance?api-version=2021-01-01"
$respJSON = $resp | ConvertTo-Json -Depth 6

Compute only, could do Network, all the main JSON headings
Invoke-RestMethod -Headers @{"Metadata"="true"} -Method GET -Proxy $Null -Uri "http://169.254.169.254/metadata/instance/compute?api-version=2021-01-01"

#Just get tags
Invoke-RestMethod -Headers @{"Metadata"="true"} -Method GET -Proxy $Null -Uri "http://169.254.169.254/metadata/instance/compute/tagsList?api-version=2021-01-01"

#Linux
curl -H Metadata:true --noproxy "*" "http://169.254.169.254/metadata/instance?api-version=2020-09-01" | jq
